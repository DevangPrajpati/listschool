'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _uniforms = require('uniforms');

var _react = require('react');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Bootstrap3 = function Bootstrap3(parent) {
    var _class, _temp;

    return _temp = _class = function (_parent) {
        _inherits(_class, _parent);

        function _class() {
            _classCallCheck(this, _class);

            return _possibleConstructorReturn(this, Object.getPrototypeOf(_class).apply(this, arguments));
        }

        _createClass(_class, [{
            key: 'getChildContextState',
            value: function getChildContextState() {
                return _extends({}, _get(Object.getPrototypeOf(_class.prototype), 'getChildContextState', this).call(this), {
                    grid: this.props.grid
                });
            }
        }, {
            key: 'getNativeFormProps',
            value: function getNativeFormProps() {
                var props = _get(Object.getPrototypeOf(_class.prototype), 'getNativeFormProps', this).call(this);
                var error = this.getChildContextError();

                return _extends({}, props, {
                    className: (0, _classnames2.default)('form', { error: error, 'form-horizontal': props.grid }, props.className)
                });
            }
        }]);

        return _class;
    }(parent), _class.Bootstrap3 = Bootstrap3, _class.displayName = 'Bootstrap3' + parent.displayName, _class.propTypes = _extends({}, parent.propTypes, {

        grid: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string])
    }), _temp;
};

exports.default = Bootstrap3(_uniforms.BaseForm);
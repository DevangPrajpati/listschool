'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _uniforms = require('uniforms');

var _react = require('react');

var _NumField = require('./NumField');

var _NumField2 = _interopRequireDefault(_NumField);

var _BoolField = require('./BoolField');

var _BoolField2 = _interopRequireDefault(_BoolField);

var _DateField = require('./DateField');

var _DateField2 = _interopRequireDefault(_DateField);

var _ListField = require('./ListField');

var _ListField2 = _interopRequireDefault(_ListField);

var _NestField = require('./NestField');

var _NestField2 = _interopRequireDefault(_NestField);

var _TextField = require('./TextField');

var _TextField2 = _interopRequireDefault(_TextField);

var _SelectField = require('./SelectField');

var _SelectField2 = _interopRequireDefault(_SelectField);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Auto = function Auto(props) {
    var component = props.component;
    if (component === undefined) {
        if (props.allowedValues) {
            component = _SelectField2.default;
        } else {
            switch (props.type) {
                case Date:
                    component = _DateField2.default;break;
                case Array:
                    component = _ListField2.default;break;
                case Number:
                    component = _NumField2.default;break;
                case Object:
                    component = _NestField2.default;break;
                case String:
                    component = _TextField2.default;break;
                case Boolean:
                    component = _BoolField2.default;break;

                default:
                    throw new Error('Unsupported field type: ' + props.type.toString());
            }
        }
    }

    return (0, _react.createElement)(component, props);
};

exports.default = (0, _uniforms.connectField)(Auto, { includeInChain: false });
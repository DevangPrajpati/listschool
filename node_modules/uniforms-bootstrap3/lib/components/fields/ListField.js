'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _uniforms = require('uniforms');

var _ListAddField = require('./ListAddField');

var _ListAddField2 = _interopRequireDefault(_ListAddField);

var _ListItemField = require('./ListItemField');

var _ListItemField2 = _interopRequireDefault(_ListItemField);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var List = function List(_ref) {
    var children = _ref.children;
    var className = _ref.className;
    var error = _ref.error;
    var initialCount = _ref.initialCount;
    var label = _ref.label;
    var name = _ref.name;
    var
    // onChange shouldn't be passed to <section>
    // eslint-disable-next-line no-unused-vars
    onChange = _ref.onChange;
    var value = _ref.value;

    var props = _objectWithoutProperties(_ref, ['children', 'className', 'error', 'initialCount', 'label', 'name', 'onChange', 'value']);

    return _react2.default.createElement(
        'section',
        _extends({ className: (0, _classnames2.default)('panel panel-default', { 'panel-danger': error }, className) }, props),
        _react2.default.createElement(
            'section',
            { className: 'panel-body' },
            label && _react2.default.createElement(
                'section',
                { className: 'panel-heading' },
                _react2.default.createElement(
                    'label',
                    { className: 'control-label' },
                    label,
                    'Â '
                ),
                _react2.default.createElement(_ListAddField2.default, { name: name + '.$', initialCount: initialCount })
            ),
            _react2.default.createElement(
                'ul',
                { className: 'list-group list-group-flush' },
                children ? value.map(function (item, index) {
                    return _react.Children.map(children, function (child) {
                        return _react2.default.cloneElement(child, {
                            key: index,
                            label: null,
                            name: (0, _uniforms.joinName)(name, child.props.name && child.props.name.replace('$', index))
                        });
                    });
                }) : value.map(function (item, index) {
                    return _react2.default.createElement(_ListItemField2.default, {
                        key: index,
                        label: null,
                        name: (0, _uniforms.joinName)(name, index)
                    });
                })
            )
        )
    );
};

exports.default = (0, _uniforms.connectField)(List, { includeInChain: false });